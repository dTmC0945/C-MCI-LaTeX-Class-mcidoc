# Created 2025-07-29 Tue 13:54
#+title: mcidoc Student Documentation
#+author: Daniel McGuiness
#+filetags: :manual:code:

#+latex_class: manual
#+latex_header: \usepackage{tech-manual}
* Introduction

This is a LaTeX document formatting designed to cater to all possible student
requirements regarding:
- document preparation,
- presentation,
- poster,
- and thesis writing.

All the aforementioned documents are bundled up as a class called ~mcidoc~.
** Purpose of Making

The main ethos of this class is to standardise and streamline document creation which abides
to the standards set by the institution with regards to:
- the font-size,
- page spacing,
- line spacing,
- caption style,
- languages specific settings
- header/footer styles
and so on so forth. 

A second goal it to create a repository to house a standard class to minimise any friction
between your work and the presentation. Therefore care was given to how the class behaves
to minimise the dependencies it needs and give you key/value pairs to modify the document
as you see fit.

#+begin_quote
[!TIP]
NOTE: This class has been tested on different computers, different OSs and LuaTeX
and pdfTeX. However, as with everything, there will always be edge cases and I am sure
to that end, if you let me know anonymously or just let me know via email, I can 
squash the bugs or add any feature it may seem necessary.
#+end_quote

#+begin_quote
[!CAUTION]
WARNING: While I will try to help with any problem this class might have, it is by no means
I am providing any kind of WARRANTY or TECHNICAL SUPPORT. There will be
documentation and some example documents which should compile without any
additional configuration. Nevertheless, I can only help with the errors from code
and not with your personal LaTeX development environment (i.e., TeXStudio).
#+end_quote

#+begin_mcibox
*Copyright Information*

Copyright 2025, D.T. McGuiness, Ph.D

This program may be distributed and/or modified under the
conditions of the LaTeX Project Public License, either version 1.1
of this license or (at your option) any later version.

The latest version of this license is in
http://www.latex-project.org/lppl.txt
and version 1.1 or later is part of all distributions of LaTeX
version 1999/06/01 or later.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

This program consists of the ~mcidoc.cls~ and its related example
files.
#+end_mcibox
* The mcidoc Class
The following section is written for people who wants to see how
the class was written and implemented. For people who just want to
get work done and not bother with the implementation, please visit
[[Examples][Examples]] chapter.
** Class Declarations

We start with defining the class header where we define the:
- Which version of LaTeX is required,
- Give an information about the package
*** Header
#+begin_src latex
\NeedsTeXFormat{LaTeX2e}[13-02-2025]  
\ProvidesClass{mcidoc}[13-02-2025 A documentclass for mci MECH Students]
#+end_src
*** Declaring Keys
We now define the keys which is needed for the class to work and some
information regarding it.

#+begin_src latex
\DeclareKeys{
  state.store       = \KEY@DOCUMENTSTATE,   % Declare the document state (Thesis | Report)
  lang.store        = \KEY@LANGUAGE,        % Define document language   (EN | DE)
  degree.store      = \KEY@DEGREE,          % Define degree level        (BSc | MSc)
  dept.store        = \KEY@DEPARTMENT,      % Define department          (MECH)
  bib-active.store  = \KEY@BIBLIOGRAPHY,    % (true | false)
  bib-style.store   = \KEY@BIBSTYLE,        % (ieee)
  column-type.store = \KEY@COLUMNTYPE,      % (one | two)
}
#+end_src

The keys and their values are as follows:

- Document State :: Stored in ~\KEY@DOCUMENTSTATE~. This value control the
     major behaviour of the document and depending on which value it is
     chosen, some command will become available or disabled. The options are:
  - Thesis
  - Report
- Language :: Stored in ~\KEY@DOCUMENTLANGUAGE~. Every langauge has their way
     of writing whether it is the comma or dot as a thousand separator or the
     titles of heaaders to their appendix, or additional documentation. This controls the
     behaviour by using two options:
  - EN
  - DE
- Degree :: Stored in ~\KEY@DEGREE~. Currently MCI offers two degree level
     diploma and this key value control various aspects of the document:
  - Title of a B.Sc and M.Sc can be slightly different,
  - In reports the cover page changes slightly if it is in M.Sc
  It accepts two options:
  - BSc
  - MSc
- Department :: Stored in ~\KEY@DEPARTMENT~. Departments can require different
     customisation to their thesis and this variable is there so someone else can do it.
     Currently only the Mechatronics department is supported. The option is:
  - MECH
- Activate Bibliography :: Stored in ~\KEY@BIBLIOGRAPHY~. Depending on the type of work,
     one may need or not a bibliography. This key value basically allows you
     to turn on or off the bibliography requirements of the thesis report.
- Bibliography Style :: Stored in ~\KEY@BIBSTYLE~. Allows the change of the way bibliography
     is written. Currently only ~ieee~ is supported but additional ones could be implemented.
- Column Type :: Stored in ~\KEY@COLUMNTYPE~. Some lecturers may need lab reports or
     assignments to be in two column to save up on unnecessary space. It supports two options:
  - one
  - two

And let's not forget to process the Keys. The following command executes the chosen options
for each selected option.

#+begin_src latex
\ProcessKeyOptions\relax        
#+end_src
*** Global Tokens
It is the time to define some tokens to store the user input.

In detail these are:

| *Token*         | *Description*                                  | *Thesis* | *Report* | *Poster* |
| ~\StudentName~  | Name of the student (Name and Surname)         | X        | X        | -        |
| ~\StudentID~    | The ID of the student (i.e., 2XXXXXXXXX)       | X        | X        | -        |
| ~\Cohort~       | The Cohort in which the student belongs to     | -        | X        | -        |
| ~\Module~       | The Module code of the lecture                 | -        | X        | -        |
| ~\Lecture~      | The name of the Lecture                        | -        | X        | -        |
| ~\Lecturer~     | The name of the Lecturer                       | -        | X        | -        |
| ~\Group~        | The names of the group (Optional)              | -        | X        | -        |
| ~\Supervisor~   | The Name, Surname, and Title of the Supervisor | X        | -        | -        |
| ~\Title~        | Title of the Work                              | X        | X        | X        |
| ~\TitleHeader~  | The sub-title of work                          | -        | X        | -        |
| ~\Authors~      | Name of the Author(s)                          | -        | -        | X        |
| ~\Affiliations~ | Affiliations of the Author(s)                  | -        | -        | X        |


We declare the tokens as such:

#+begin_src latex
\newtoks\Cohort 
\newtoks\Module
\newtoks\Lecture
\newtoks\Lecturer
\newtoks\Group\Group{nil}

\newtoks\Title
\newtoks\TitleHeader
\newtoks\Semester
\newtoks\StudentName
\newtoks\StudentID

\newtoks\Department 
\newtoks\StudyProgram
\newtoks\Supervisor
\newtoks\PrimaryAssessor
\newtoks\SecondaryAssessor

\newtoks\Authors
\newtoks\Affiliations
#+end_src
** Initial Packages and Class Macros

Below are the packages and command(s) used within the development of the class.
The packages are written in the same order as they are executed.

#+begin_mcibox
This is worth stressing over. For anyone who like to reproduce the
functionality of this class, please be careful about the *order* in which the
packages are loaded, (i.e., loading ~geometry~ too early may cause problems) as some
packages interfere with other packages definitions.
#+end_mcibox
*** Package: ifthen
~ifthen~ is a great package which allows simple if-else statements to
be executed from LaTeX.

#+begin_src latex
\RequirePackage{ifthen}         
#+end_src
*** Package: tikz
We then need to load tikz to allow precise customisation of the
title pages of the different classes. We also need to load the
~calc~ library as we need calculation to position images onto the
document.

#+begin_src latex
\RequirePackage{tikz}
\usetikzlibrary{calc}
#+end_src
*** Package: graphicx
The ~graphicx~ package allows quick loading of images.

#+begin_src latex
\RequirePackage{graphicx}
\usetikzlibrary{}
#+end_src
*** Private Command: if@State
We now need to define a non-user command (i.e, having ~@~ in the command) to create a
short-hand to select document state (to choose whether to load ~Thesis~, or ~Report~)

*Arguments*
- #1 : The state of the document (i.e., Report, Thesis, ...)
- #2 : The action to be taken

#+begin_src latex
\newcommand{\If@State}[2]{%
  \ifthenelse{\equal{\KEY@DOCUMENTSTATE}{#1}
  }{%
    #2
  }{%
    % 
  }%
}%
#+end_src
** State: Document Type

The following section describes the various states the class can use.
Currently there are two classes ~mcidoc~ uses to create the documents
which are:

- Thesis
- Report
*** Thesis Class
We load the KOMA-Script class and describe the following options.
There are points worth discussing.

- We set the font-size ~10pt~ to *not* waste paper and to avoid the
  superfluous filling of thesis.
- We set the value of ~twoside~ as true to allow margins to change
  between even and odd.
- We also set it to ~openright~ to make sure chapters are opening
  on the RIGHT.

#+begin_src latex
\If@State{Thesis}{%
  \LoadClass[%
  chapterprefix = true,%
  DIV           = 11,%
  paper         = A4,%
  fontsize      = 10,%
  twoside       = true,%
  openright%
  ]{scrreprt}%
}%
#+end_src
*** Report Class
We define another class which is used for writing assignment
and other related works. This class is based on the ~scrreprt~ class from
KOMA with additional options.

This class behaves similar to the [[Thesis Class][Thesis]] class with an additional option of
~columntype~. This option changes the way the document is presented by adding a second
column.

#+begin_mcibox
By default the ~columntype~ is set ~one~.
#+end_mcibox

#+begin_src latex
\If@State{Report}{
  \ifthenelse{
    \equal{\KEY@COLUMNTYPE}{one}
  }{
    \LoadClass[
    chapterprefix = true,
    DIV           = 22,
    paper         = A4,
    fontsize      = 10,
    twoside       = false,
    ]{scrreprt}
  }{
    \LoadClass[
    chapterprefix = true,
    DIV           = 22,
    paper         = A4,
    fontsize      = 10,
    twoside       = false,
    twocolumn
    ]{scrreprt}
    }
}
#+end_src
*** Poster Class
Here we define the poster class which will be used for presenting academic work.
We use the ~tikzposter~ class as our template. We set the following settings:

- 24pt :: This is the maximum allowed font.
- margin :: Set this to zero as this will be controlled by TiKZ.
- a0paper :: This option should not be changed as all posters should be kept at A0 paper.

#+begin_src latex
\If@State{Poster}{
    \LoadClass[
    25pt
    margin=0in,
    a0paper,
    ]{tikzposter}
}
#+end_src

We now invoke ~\ExecuteOptions~ which applies all the options you specify in the
argument, in order, as our selected defaults.

#+begin_src latex
\ExecuteOptions{}
#+end_src
** State: Bibliography

If the document requires references, this option automatically sets up the
bibliography. The control of this is done by the variable ~\KEY@BIBLIOGRAPHY~ variable.

#+begin_src latex
\ifthenelse{%
  \equal{\KEY@BIBLIOGRAPHY}{true}
}{%
  \RequirePackage[
  backend = bibtex,
  style   = \KEY@BIBSTYLE,        
  ]{biblatex}     
}{}%
#+end_src

In addition one can also control the style of the reference (i.e., plain, ieeetr, apa, ...)
based on what bibtex in what is installed in the users computer. The style variable is
set using ~\KEY@BIBSTYLE~.
** State: Language Control

As MCI is an institution which uses more than one langauge to create and review documentation,
the class has two options to make sure correct typography and rules are set for each language:

- *English* Define a control sequence to allow certain controls if the language is English.
  - #1 :: [Mandatory] Action to be taken if English. If empty, no action will be done

#+begin_src latex
\newcommand{\Lang@English}[1]{%
  \ifthenelse{\equal{\KEY@LANGUAGE}{EN}%
  }{%
    #1
  }{%
  }%
}%
#+end_src

- *German* Here we define a control sequence to allow certain controls if the language
  is German.
  - #1 :: [Mandatory] Action to be taken if German. If empty, no action will be done

#+begin_src latex
\newcommand{\Lang@German}[1]{%
  \ifthenelse{\equal{\KEY@LANGUAGE}{DE}
  }{%
    #1
  }{%
  }%
}%
#+end_src
** State: Defining Departments

Here we define the departments supported by the ~mcidoc~ class. Currently only one department
is supported, which is the department the author belongs to, Mechatronics. This option was
designed as a backdoor to enable further customisation if a department requires a unique
or interesting request.

Using the language if/else we define the English and German text for Mechatronics:

- English :: Mechatronics
- German :: Mechatronik

#+begin_src latex
\ifthenelse{%
  \equal{\KEY@DEPARTMENT}{MECH}%
}{%
  \Lang@English{\def\Department{Mechatronics}}%
  % 
  \Lang@German{\def\Department{Mechatronik}}
}{}%
#+end_src
** State: Language Support

Currently this class supports two languages. If the reader is not aware of these choices by
the time they reached this part of the documentation. Here is a quick run-down:

- EN :: English language formatting
- DE :: German language formatting

#+begin_src latex
\ifthenelse{\equal{\KEY@LANGUAGE}{EN}%
}{%
  \RequirePackage[english]{babel}    % <-- Allows english settings and typography
}{%
  \RequirePackage[ngerman]{babel}    % <-- Allows german settings and typography
}%
#+end_src
** Thesis Specific Configurations

Below are the configurations which are only accesible using the ~Thesis~ sub-class.
*** Public Command: DeclarationOfNovelty
The ~\DeclarationOfNovelty~ command, as the name suggest, generates a boilerplate
text, written either in German (DE), or in English (EN), regarding their work and declare
of the works originality. The bottom of the generated page also has two places for
handwritten text/signature:

- Left side for the Place
- Right side for Signature

The command takes *NO* arguments as the only thing needed is the invokation of the
command *after* ~\TableOfContents~

At the end of the command a ~\cleardoublepage~ is used so the next content is
always occuring in the odd page.

#+begin_src latex
\newcommand\DeclarationOfNovelty{%
#+end_src

We start with defining the English text. The text is *NOT* user accesible.

#+begin_src latex
\section*{Declaration in Lieu of Oath}

I hereby declare, under oath, the thesis titled,
% 
\begin{center}
  \textit{\the\Title}
\end{center}
% 
has been my independent work and has not been aided
with any prohibited means as declared 
by the program and/or the institution. \\

I declare, to the best of my knowledge and belief, that
all passages taken from published, unpublished sources
have been reproduced as original, slightly changed,
have been mentioned and sources have been cited
accordingly as required by academic academic standards
decreed by the institution and the program \\[5\baselineskip]

\vspace{\fill}

\rule{5cm}{0.2pt}\hfill\rule{5cm}{0.2pt}\\
\phantom{Placeholder}Place, Date\hfill Signature\hspace{15mm}
#+end_src

Here we write the German text, which same as English, is *NOT* user accesible.

#+begin_src latex
\section*{Eidesstattliche Erklärung}
Ich erkl\"are hiermit an Eides statt, dass ich die vorliegende
Arbeit selbst"andig angefertigt habe. Die aus fremden
Quellen direkt oder indirekt \"ubernommenen Gedanken sind
als solche kenntlich gemacht. Die Arbeit wurde bisher weder
in gleicher noch in \"ahnlicher Form einer anderen
Pr\"ufungsbeh\"orde vorgelegt und auch noch nicht
ver\"offentlicht.\\[5\baselineskip]

\vspace{\fill}

\rule{5cm}{0.2pt}\hfill\rule{5cm}{0.2pt}\\
\phantom{Datum }Ort, Datum\hfill Unterschrift\hspace{15mm} 
#+end_src

#+begin_mcibox
The command requires the ~\Title~ token to be defined.
#+end_mcibox
*** Public Command: ThesisEmbargoRequest
Some thesis is written by companies and therefore may require the information
within the thesis to be restricted to public access for certain duration
of time, which is generally set for 5 years.

The command ~\ThesisEmbargoRequest~  is a boilerplate text which writes in an odd page the
embargo request.

Of course the request could be 5 years or 50 depending on what the requirements
are, in which case the command takes a single optional argument:

- #1 :: [Optional] The number of years the embargo is requested. Default is 5.

At the end of the command a ~\cleardoublepage~ is used so the next content is
always occuring in the odd page.

#+begin_src latex
\newcommand{\ThesisEmbargoRequest}[1][5]{
#+end_src

We start with defining the English text. The text is *NOT* user accesible.

#+begin_src latex
\section*{Preclusion from Public Access}

I have requested preclusion from public
access for the work titled,
% 
\begin{center}
  \textit{\the\Title}
\end{center}
% 
which was approved by the \the\year\, study program,
and therefore has been blocked from
public domain until the
date of 31.07.\fpeval{\the\year + #1}.

\vspace{\fill}

\rule{5cm}{0.2pt}\hfill\rule{5cm}{0.2pt}\\
\phantom{Placeholder}Place, Date\hfill Signature\hspace{15mm}
#+end_src

Here we write the German text, which same as English, is *NOT* user accesible.

#+begin_src latex
\section*{Ausschluss vom öffentlichen Zugang}
Ich habe den Ausschluss der öffentlichen
Zugänglichkeit für die Arbeit mit dem Titel
% 
\begin{center}
  \textit{\the\Title}
\end{center}
% 
beantragt, die vom Studienprogramm \the\year\, genehmigt
wurde und daher gesperrt wurde
bis zum Datum 31.07.\engord{\numexpr{\the\year + #1}\relax}
gemeinfrei.


\vspace{\fill}

\rule{5cm}{1pt}\hfill\rule{5cm}{1pt}\\
\phantom{Datum }Ort, Datum\hfill Unterschrift\hspace{15mm}
#+end_src

#+begin_mcibox
The command requires the ~\Title~ token to be defined.
#+end_mcibox
*** Public Command: TableOfContents
The ~\TableOfContents~ is a commmand which wraps commands together to make sure

- A ~\listoffigures~ and then ~\listoftables~ are added after the
  main ~\tableofcontents~.
- Page after the table of contents start arabic
- A double clearpage is inserted so the next content start in an odd page.
- Make sure the header and footer style is changed.

#+begin_src latex
\newcommand{\TableOfContents}{
  \tableofcontents
  \listoffigures
  \listoftables
  % 
  \clearpage
  \pagenumbering{arabic}
  % 
  \pagestyle{scrheadings}
} 
#+end_src
*** Public Command: MakeTitlePage
This command simply generates the cover page for the thesis and automates
the correct placement of the objects within the page.

- Takes NO arguments.

#+begin_src latex
\newcommand\MakeTitlePage{
  %
  % Make sure the page has no header/footer
  \pagestyle{empty}
  %
  % Break geometry and create a new one
  \newgeometry{%
    margin = 3cm,
    top    = 3cm,
  }%
  % Put the title on centre-stage
  \begin{titlepage}
    \vspace*{15ex}
    \begin{center}
      \LARGE \noindent\kern-1pt\textbf{\the\Title}
    \end{center}
    % 
    \centering
    %
    % Put the mci-logo on the page in upper right.x
    %
    \begin{tikzpicture}[remember picture, overlay]
      \node at (7,5) {\includegraphics{img/mci-logo.pdf}};
    \end{tikzpicture}

    % Put the subtitle text whether it is M.Sc or B.Sc
    \begin{center}
      \ifthenelse{%
        \equal{\KEY@DEGREE}{MSc}%
      }{%
        \ifthenelse{%
          \equal{\KEY@LANGUAGE}{EN}%
        }{%
          \LARGE \textbf{Master Thesis}%
        }{%
          \LARGE \textbf{Master Artbeit}%
        }%
      }{%
        \ifthenelse{%
          \equal{\KEY@LANGUAGE}{EN}%
        }{%
          \LARGE \textbf{Bachelor Thesis}%
        }{%
          \LARGE \textbf{Bachelor Artbeit}%
        }%
      }%
    \end{center}

    \vspace{4ex}

    % Add the fullfilment text
    \ifthenelse{%
      \equal{\KEY@LANGUAGE}{EN}%
    }{%
      \Large In partial fulfillment of the requirements for the degree%
    }{%
      \Large zur Erlangung des akademischen Grades%
    }%

    \vspace{1ex}

    % Add which degree is it from.
    \ifthenelse{%
      \equal{\KEY@DEGREE}{BSc}%
    }{%
      \Large {\em Bachelor of Science in Engineering}%
    }{%
      \Large {\em Master of Science in Engineering}%
    }%

    \vspace{\fill}

    % Add a third (!?) declaration of degree
    \ifthenelse{%
      \equal{\KEY@DEGREE}{BSc}%
    }{%
      \Large {Bachelor Program}%
    }{%
      \Large {Master Program}%
    }%

    \vspace{1ex}%

    {\normalsize Mechatronics \& Smart Technologies:}

    \vspace{1ex}

    {\normalsize Management Center Innsbruck}

    \vspace{8ex}

    {\Large Supervisor} 

    \vspace{1ex}

    {\Large \the\Supervisor}

    \vspace{8ex}

    {\Large Author}

    \vspace{1ex}

    {\Large \the\StudentName}

    \vspace{1ex}

    {\Large \the\StudentID}

  \end{titlepage}
  %
  %
  \restoregeometry
  %
  \cleardoublepage
}%
#+end_src
*** Header and Footer Settings
The below are the header footer settings for the thesis class.

- As this is a derivative of ~KOMA~, we load the excellent package ~scrlayer-scrpage~ to
  define and then control the header and footer of the document.
- Make sure the chapter on the header is uppercase and always place is away from
  binding.
- Put the section name towards the binding.
- Put the student name in footer towards the binding.
- Put the page number away from binding.

#+begin_src latex
\RequirePackage[
automark,
headsepline,
footsepline,
autooneside  = false
]{scrlayer-scrpage}

\clearpairofpagestyles

\ihead{\MakeUppercase{\leftmark}}
\ohead{\rightmark}
\ofoot{\thepage}
\ifoot{\the\StudentName}
\renewcommand{\headfont}{\normalfont}
#+end_src
** Report Specific Configurations

Below are the commands and configurations used specifically by the Report class.
*** Public Command: MakeTitlePage
This command simply generates the cover page for the thesis and automates
the correct placement of the objects within the page.

- Takes NO arguments.

#+begin_src latex
\newcommand{\MakeTitlePage}{

    \pagestyle{empty} % Define page style as empty (i.e., no header & footer)

    % Define new geometry for the title page (this will be reset later)
    \newgeometry{
      margin = 3cm,
      top    = 3cm} 

    \begin{titlepage}
      % 
      \begin{tikzpicture}[overlay, remember picture]
        \node at ([xshift=-7cm, yshift=7cm]current page.center) {
          \includegraphics[scale=7]{img/mci-logo-outline.pdf}
        };
      \end{tikzpicture}
      % 
      \begin{flushleft}
        %
        % Include \noindent and \kern as a patch for the beginning line
        {\Large\the\TitleHeader \\[\baselineskip]
        {\Huge\textbf{\textcolor{black}{\the\Title}}}} \\[\baselineskip]
        {\Large\the\Cohort} \\[\baselineskip]
        {\Large \the\Lecture}
        \normalsize 

      \end{flushleft}
      %

      \vspace{\fill}

      \newcolumntype{b}{X}
      \newcolumntype{s}{>{\hsize=.5\hsize}X}
      \newcolumntype{g}{>{\hsize=.8\hsize}X}

      \Lang@English{
        \begin{table}[!b]
          \centering
          \normalsize
          \renewcommand{\arraystretch}{1.2}%
          \begin{tabularx}{\textwidth}{s|b}
            \textbf{Author(s)}                     & \the\StudentName \\
            \textbf{Student ID(s)}\phantom{Circus} & \the\StudentID   \\
            \textbf{Supervisor}                    & \the\Supervisor  \\
            \textbf{Cohort}                        & \the\Cohort      \\
            \ifthenelse{\equal{\the\Group}{nil}}{}{
            \textbf{Group}                         & \the\Group       \\
            }
            \textbf{Lecturer}                      & \the\Lecturer    \\
          \end{tabularx}
        \end{table}
      }

      \Lang@German{
        \begin{table}[!b]
          \centering
          \normalsize
          \renewcommand{\arraystretch}{1.2}%
          \begin{tabularx}{\textwidth}{g|b}
            \textbf{Autor(en)}              & \the\StudentName \\
            \textbf{Studierendenausweis(e)} & \the\StudentID   \\
            \textbf{Supervisor}             & \the\Supervisor  \\
            \textbf{Kohorte}                & \the\Cohort      \\
            \ifthenelse{\equal{\the\Group}{nil}}{}{
            \textbf{Gruppe}                 & \the\Group       \\
            }
            \textbf{Lektor}                 & \the\Lecturer    \\
          \end{tabularx}
          \normalsize
        \end{table}
      }
    \end{titlepage}
    \restoregeometry
    \cleardoublepage
  }
#+end_src
*** Public Command: TableOfContents
The ~\TableOfContents~ is a commmand which wraps commands together to make sure

- Automatically a ~\listoffigures~ and then ~\listoftables~ are added after the
  main ~\tableofcontents~.
- Page after the table of contents start arabic
- A double clearpage is inserted so the next content start in an odd page.
- Make sure the header and footer style is changed.

#+begin_src latex
\newcommand{\TableOfContents}{
  \tableofcontents
  \listoffigures
  \listoftables
  % 
  \clearpage
  \pagenumbering{arabic}
  % 
  \pagestyle{scrheadings}
} 
#+end_src
*** Header and Footer Settings
The below are the header footer settings for the thesis class.

- As this is a derivative of ~KOMA~, we load the excellent package ~scrlayer-scrpage~ to
  define and then control the header and footer of the document.
- Make sure the chapter on the header is uppercase and always place is away from
  binding.
- Put the section name towards the binding.
- Put the student name in footer towards the binding.
- Put the page number away from binding.

#+begin_src latex
\RequirePackage[
automark,
headsepline,
footsepline,
autooneside  = false
]{scrlayer-scrpage}

\clearpairofpagestyles

\ihead{\MakeUppercase{\leftmark}}
\ohead{\rightmark}
\ofoot{\thepage}
\ifoot{\the\StudentName}
\renewcommand{\headfont}{\normalfont}
#+end_src
** Poster Specific Configurations


Time to define certaion configuration settings for the poster class.

We start simple and begin by defining the header. There are few settings worth mention:

- The top part is reseved for title and should not exceed two lines,
- Second line below line is for the author(s)
- Third line is Affiliations.
- The Logo is controlled by the language key which changes depending on EN or DE.

#+begin_src latex
\renewcommand\TP@maketitle{%

  \begin{tikzpicture}[overlay, remember picture]
    \draw[fill=mci2,draw=none]
    (current page.north west) rectangle
    ([xshift=0cm, yshift=-20cm]current page.north east);

    \node[%
    execute at begin node = \linespread{1.5}\selectfont,
    font=\Huge,
    text width=60cm,
    align=left,
    ] at ([xshift=32.5cm, yshift=-2cm]current page.north west) {\bf \textcolor{white}{\the\Title}};

    \draw[line width=4pt,draw=mci2!70!white]
    ([xshift=2.5cm, yshift=-11cm]current page.north west) -- ([xshift=-22cm, yshift=-11cm]current page.north east);

    \node[font=\LARGE,text width=60cm, align=left] at
    ([xshift=32.5cm, yshift=-12cm]current page.north west) {\it \textcolor{white}{\the\Authors}};


     \node[font=\Large,text width=60cm, align=left] at
    ([xshift=32.5cm, yshift=-15cm]current page.north west) {\textcolor{white}{\the\Affiliations}};

      \draw[fill=mci2!95,draw=none]
      (current page.north east) rectangle
      ([xshift=-15cm, yshift=-20cm]current page.north east);


      \draw[fill=mci2!90,draw=none]
      (current page.north east) rectangle
      ([xshift=-7.5cm, yshift=-20cm]current page.north east);

      \draw[fill=mci2!75,draw=none] 
      (current page.north east) rectangle
      ([xshift=-2.5cm, yshift=-20cm]current page.north east);

      \node[rotate=90, align=left, text width=20cm] at
      ([xshift=-2.25cm, yshift=-9cm]current page.north east) {\textcolor{mci2!70!black}{\Department}};

% 
\ifthenelse{%
  \equal{\KEY@LANGUAGE}{EN}
}{%
      \node at
      ([xshift=-11cm, yshift=-9cm]current page.north east)
      {\includegraphics[scale=2]{/Users/danielmcguiness/GitHub/C-MCI-LaTeX-Class-mcidoc/img/mci-logo-neg-EN.pdf}};
      }

\ifthenelse{%
  \equal{\KEY@LANGUAGE}{DE}
}{%
      \node at
      ([xshift=-11cm, yshift=-9cm]current page.north east)
      {\includegraphics[scale=2]{/Users/danielmcguiness/GitHub/C-MCI-LaTeX-Class-mcidoc/img/mci-logo-neg-DE.pdf}};
      }

  \end{tikzpicture}
  ~
  \begin{tikzpicture}
  \draw[fill=none, draw=none]
    (current page.north west) rectangle
    ([xshift=-25cm, yshift=-20cm]current page.north east);
  \end{tikzpicture}
}
#+end_src
*** Theme Configurations
These are just simple configuration settings for tikzposter:

#+begin_src latex
\usetheme{Simple}
\usetitlestyle{Empty}

% We use one of the mci colours for the header
\definecolor{mci2}{HTML}{004983}
#+end_src

We also set custom fonts as the original fonts given by KOMA does not look well for
large documentation

#+begin_src latex
\AtEndOfClass{
  \usepackage[scaled]{helvet}
  \renewcommand\familydefault{\sfdefault} 
  \usepackage[T1]{fontenc}
}
#+end_src

Now we have to reconfigure the minial block style from the simple theme:

#+begin_src latex
\defineblockstyle{Minimal}{
  titlewidthscale   = 1,
  bodywidthscale    = 1,
  titleleft, 
  titleoffsetx      = 0pt,
  titleoffsety      = 0pt,
  bodyoffsetx       = 0pt,
  bodyoffsety       = 0pt,
  bodyverticalshift = 0pt,
  roundedcorners    = 0,
  linewidth         = 0.1cm,
  titleinnersep     = 1cm,
  bodyinnersep      = 1cm 
}{
  \begin{scope}[line width=\blocklinewidth, rounded corners=\blockroundedcorners]
    \ifBlockHasTitle %
      \draw[draw=none]
      (blockbody.south west) rectangle (blocktitle.north east);
      \draw[draw=gray, dotted] 
      (blocktitle.south west) -- (blocktitle.south east);%
    \else
      \draw[draw=none]
      (blockbody.south west) rectangle (blockbody.north east);
    \fi
  \end{scope}
}
#+end_src
*** Public Command: tikztable
To facilitate the production of presenting images in poster and fix any floating issues, we
define a new command as follows:

#+begin_src latex
\newcounter{tablecounter}
\newenvironment{tikztable}[1][]{
  \def \rememberparameter{#1}
  \vspace{10pt}
  \refstepcounter{tablecounter}
  \begin{center}
  }{
    \ifx\rememberparameter\@empty
    \else
    \\[10pt]
    {\small Tab.~\thetablecounter: \rememberparameter}
    \fi
  \end{center}
}
#+end_src
*** Public Command: MakeTitlePage
While the name might be a problem as we are not printing a page for just the title, we
are keeping the name to keep the uniformity across commands between classes:

#+begin_src latex
\newcommand{\MakeTitlePage}{
  \node[above right,
  outer sep=0pt,
  minimum width=\paperwidth,
  minimum height=3cm,
  align=center,font=\normalsize,
  draw=none,fill=gray!30,
  ultra thick] at ([shift={(0.5*\pgflinewidth,0.5*\pgflinewidth)}]bottomleft) {%
    MCI | 6020 Innsbruck / Austria, Universit\"atsstra{\ss}e 15 | + 42 512 2070 | office@mci.edu
  };

  \node[above right,
  outer sep=0pt,
  minimum height=1.8cm,
  minimum width=7cm,
  align=left,font=\normalsize,
  draw=none, fill=gray!30] at ([yshift=3cm]bottomleft) {};

  \node[above right,
  outer sep=0pt,
  minimum height=1.8cm,
  minimum width=0.9cm,
  align=left,font=\normalsize,
  draw=none, fill=gray!15] at ([xshift=7cm, yshift=3cm]bottomleft) {};

  \node[above right,
  outer sep=0pt,
  minimum height=0.9cm,
  minimum width=1.8cm,
  align=left,font=\normalsize,
  draw=none, fill=gray!15] at ([xshift=7cm, yshift=3cm]bottomleft) {};

  \node[above right,
  outer sep=0pt,
  minimum height=0.9cm,
  minimum width=0.9cm,
  align=left,font=\normalsize,
  draw=none, fill=gray!25] at ([xshift=7cm, yshift=3cm]bottomleft) {};

  \node[above right,
  outer sep=0pt,
  minimum height=1cm,
  align=left,font=\normalsize,
  draw=none] at ([xshift=-1cm, yshift=-0.9cm]bottomleft) {%
    \includegraphics[scale=1.2]{%
      /Users/danielmcguiness/GitHub/C-MCI-LaTeX-Class-mcidoc/img/mci-logo.pdf}
  };
  \maketitle
}
#+end_src
** Additional Configurations

Below are the additional configurations which are used by all the previously mentioned
classes.
*** Package: fontenc
We set the font of the document in a sans-serif font for better legibility to
read the document in a digital display.

#+begin_src latex
\RequirePackage{Gudea}  
\RequirePackage[T1]{fontenc}  
#+end_src
*** Package: Set Space
We set line separation a little bit more than standard so the text doesn't look
like it is suffocating.

#+begin_src latex
\RequirePackage{setspace}
\setstretch{1.25}
#+end_src
*** Package: geometry
Load geometry as it would not be possible otherwise to change page style.

#+begin_src latex
\RequirePackage{geometry}
#+end_src
*** Package: siunitx
No STEM paper would be written witout using ~siunitx~.

#+begin_src latex
\RequirePackage{siunitx}
#+end_src
*** Package: tabularx
We need the package to handle the lower part of the titlepage
for the ~Report~ class.

#+begin_src latex
\RequirePackage{tabularx}
#+end_src
*** Package: booktabs
We use this to add lines to the tabular environments.

#+begin_src latex
\RequirePackage{array, booktabs, multirow}
#+end_src
*** Package: enumitem
This package is particularly useful to add or modify the
behaviour of itemize, enumerate environments. Here we change
the label of itemize environment.

#+begin_src latex
\RequirePackage{enumitem} 
\setlist[itemize]{label=$\blacksquare$}
#+end_src
*** Package: pgfplots
We use ~pgfplots~ for plotting figures but it is here for mostly
demonstrative purposes used in the example document. This can
freely be removed if required.

#+begin_src latex
\RequirePackage{pgfplots}
#+end_src
*** Package: caption
We use the package to change the behaviour of the captions under
figures and tables. Here we change the font of the text to small
and make it bold.

#+begin_src latex
\usepackage[font=small,labelfont=bf]{caption}
#+end_src
*** Package: ams
This just goes without saying.

#+begin_src latex
\RequirePackage{
  amsmath,
  amssymb
}
#+end_src
*** Package: listings
~listings~ is a versatile pacakge to print out the code in
a uniform way. Below are the configurations set to the
package. Currently a global setting is given called ~mainStyle~
however, this can easily be changed.

#+begin_src latex
\RequirePackage{listings}

  \definecolor{codegreen}{rgb}{0,0.6,0}
  \definecolor{codegray}{rgb}{0.5,0.5,0.5}
  \definecolor{codepurple}{rgb}{0.58,0,0.82}
  \definecolor{backcolour}{rgb}{0.95,0.95,0.92}

  \lstdefinestyle{mainStyle}{
    backgroundcolor       = \color{white},
    commentstyle          = \color{codegreen},
    keywordstyle          = \color{magenta},
    numberstyle           = \tiny\color{codegray},
    stringstyle           = \color{codepurple},
    basicstyle            = \ttfamily\footnotesize,
    breakatwhitespace     = false,
    breaklines            = true,
    captionpos            = b,
    frame                 = l,
    keepspaces            = true,
    numbers               = left,
    numbersep             = 10pt,
    showspaces            = false,
    showstringspaces      = false,
    showtabs              = false,
    tabsize               = 2
  }
  \lstset{style=mainStyle} % \(^.^)/
#+end_src
* Examples

** Thesis Main
Below is the explanation of a thesis class document which should be included with
the ~mcidoc~. This section is focused on the explanation of how to use ~Thesis~ 
in an application.

#+begin_mcibox
The contents of this section should be available in ~Main-Thesis.tex~.
#+end_mcibox

Below is the example of how the main file looks like. We first define the ~documentclass~
optional arguments with their required values:

#+begin_src latex
\documentclass[   
state        = Thesis,                       % (Report | Thesis)
lang         = EN,                           % (DE     | EN) 
degree       = MSc,                          % (BSc    | MSc)
dept         = MECH,                         % (MECH   | SBT)
bib-active   = true,                         % (true   | false)
bib-style    = ieee,                         % (ieee)
column-type  = two,                          % (one    | two)
]{mcidoc}   
#+end_src

Next we have our preamble where it is in good put and post configuration we
may need to have in our document.

Here we have a sample bibliography as well.

And at the lower end we have some variables which need defining for the thesis
template.

#+begin_src latex
% CUSTOM COMMANDS -----------------------------------------------------------------------------
%       
% Please enter any custom command/packages you require here for easy tracking 

% For example, bibliography setting are added. Bibtex is the standard but if you prefer
% there are other options on the market such as biber. Style has been chosen as IEEE but if 
% are from another discipline, please feel free to change it.




\bibliography{references.bib}  % Here we add our file where we store our references.
%      
% ---------------------------------------------------------------------------------------------

% DOCUMENT PARAMETERS -------------------------------------------------------------------------

\Title{%
  On the Study of Different Rotor Geometry Configuration for use in High-Speed
  Induction Motors
}% 

\StudentName{Jason Smith} 
\StudentID{2024000095} 

\StudyProgram{Mechatronics \& Smart Technologies}  
\Supervisor{Colin Stevens}
#+end_src


Here we load the necessary command required by the ~Report~ class. There are only two commands

- ~\MakeTitlePage~ :: Generates the title page based on what was entered previously,
- ~\DeclarationOfNovelty~ :: Generates a page of standard text.
- ~ThesisEmbargoRequest~ :: Creates a page of standard text.
- ~\TableOfContents~ :: Creates a table of contents containing:
  - List of headings,
  - List of figures,
  - List of tables.

#+begin_mcibox
Please put your abstract (EN) , abstract (DE), and Acknoledgement after ~\ThesisEmbargoRequest~.
#+end_mcibox

#+begin_src latex
\begin{document} % ############################################################################

\MakeTitlePage     

\DeclarationOfNovelty

\ThesisEmbargoRequest[5]

\TableOfContents  

% REPORT CONTENT ------------------------------------------------------------------------------

% ----      
% Your report content should go here and should follow structure befitting of a scientific
% report and should be written in a scientific format. For more information please look at
% MCI guidelines on how it should be done.      
% ----  

% Include Chapter - introduction
\include{chapter/introduction.tex}   

% Include Chapter - literature survey  (contains minted code)
%\include{chapter/literature-survey.tex}      

% ---- 
% Add as many chapters as you see fit for your content. For easy legibility and for dynamic
% adjustment of content it would be suggested to write your files and place them similar to
% the aforementioned examples.
#+end_src

Here we add any additional post document configurations we may need, such as:

- Bibliography,
- Nomenclature,
- Glossary,
- Index.

#+begin_mcibox
These options require you to use external packages (~\usepackage~) please look into the
corresponding packages and their documentation for more information. Here as I have
loaded bibtex I can use ~\printbibliography~ to make the reference list appear at the
end of the document.
#+end_mcibox

#+begin_src latex
% REPORT POSTAMBLE ----------------------------------------------------------------------------

% ----
% In this section, please put all the thing you deem are necessary for the thesis but does have
% no substance as materials (i.e., technical drawings, patents, massive code bases).
% ----

\printbibliography

% \makeindex
% \printnomenclature
% \printglossaries

\end{document} % ##############################################################################
#+end_src
** Report Main
Below is the explanation of a report class document which should be included with
the ~mcidoc~. This section is focused on the explanation of how to use ~Report~ 
in an application.

#+begin_mcibox
The contents of this section should be available in ~Main-Report.tex~.
#+end_mcibox

Below is the example of how the main file looks like. We first define the ~documentclass~
optional arguments with their required values:

#+begin_src latex
\documentclass[   
state        = Report,                       % (Report | Slide    | Thesis)
lang         = DE,                           % (DE     | EN) 
degree       = MSc,                          % (BSc    | MSc)
dept         = MECH,                         % (MECH   | SBT)
bib-active   = true,                         % (true   | false)
bib-style    = ieee,                         % (ieee)
column-type  = one,                          % (one    | two)
]{mcidoc}
#+end_src

Next we have our preamble where it is a good practice to put and connfigurations we
may need to have in our document such as:

- Additional packages,
- Package settings,
- Newcommands or revising old commands,
- Loading libraries,
- Declaring file paths.

Here we have a sample bibliography as well.

And at the lower end we have some variables which need defining for the report
template.

#+begin_mcibox
The ~\Group~ is an optional token and if it does not apply to your current situation,
please remove it.
#+end_mcibox

#+begin_src latex
% CUSTOM COMMANDS -----------------------------------------------------------------------------
%       
% Please enter any custom command/packages you require here for easy tracking 

% For example, bibliography setting are added. Bibtex is the standard but if you prefer
% there are other options on the market such as biber. Style has been chosen as IEEE but if 
% are from another discipline, please feel free to change it.

\bibliography{references.bib}  % Here we add our file where we store our references.
%      
% ---------------------------------------------------------------------------------------------

% DOCUMENT PARAMETERS -------------------------------------------------------------------------

\TitleHeader{Laboratory Report 3}%   

\Title{%
  On the Study of Different Rotor Geometry Configuration for use in High-Speed
  Induction Motors
}% 

\Lecture{Drive Technologies}%    

\Lecturer{Daniel T. McGuiness, Ph.D}%

\Cohort{BA-MECH-22}%           
\Group{BA-MECH-22-4A}%

\StudentName{Jason Smith}%
\StudentID{2024000095}% 

\Supervisor{Colin Stevens}%   
#+end_src

Here we load the necessary command required by the ~Report~ class. There are only two commands

- ~\MakeTitlePage~ :: Generates the title page based on what was entered previously,
- ~\TableOfContents~ :: Creates a table of contents containing:
  - List of headings,
  - List of figures,
  - List of tables.

#+begin_src latex
\begin{document} % ############################################################################

\MakeTitlePage     

\TableOfContents           

% REPORT CONTENT ------------------------------------------------------------------------------

% ----      
% Your report content should go here and should follow structure befitting of a scientific
% report and should be written in a scientific format. For more information please look at
% MCI guidelines on how it should be done.      
% ----  

% Include Chapter - introduction
\include{chapter/introduction.tex}   

% ---- 
% Add as many chapters as you see fit for your content. For easy legibility and for dynamic
% adjustment of content it would be suggested to write your files and place them similar to
% the aforementioned examples.
#+end_src

Here we add any additional post document configurations we may need, such as:

- Bibliography,
- Nomenclature,
- Glossary,
- Index.


#+begin_mcibox
These options require you to use external packages (~\usepackage~) please look into the
corresponding packages and their documentation for more information. Here as I have
loaded bibtex I can use ~\printbibliography~ to make the reference list appear at the
end of the document.
#+end_mcibox

#+begin_src latex
% REPORT POSTAMBLE ----------------------------------------------------------------------------

% ----
% In this section, please put all the thing you deem are necessary for the thesis but does have
% no substance as materials (i.e., technical drawings, patents, massive code bases).
% ----

\printbibliography

% \makeindex
% \printnomenclature
% \printglossaries

\end{document} % ##############################################################################
#+end_src
** A Chapter
The following is a generric template which show a wide variety of features you may need in your
thesis work.

#+begin_mcibox
The contents of this section should be available in ~chapter/introduction.tex~.
#+end_mcibox

#+begin_src latex
\chapter{Introduction}

\section{The Need for Speed}

In recent years, improvements in manufacturing, transportation and process industry
technologies bring about an increase in optimal operation speed in drive systems. In this
respect, recently developed high speed gear-less or direct-drive electrical drives have seen an
increase in interest based on the reduction in the total structural volume of the drive
system. Due to the significant development of cost-effective, fast switching and compact
variable frequency drives technology, wide speed range operations of different type AC motors
has become feasible. The speed definition of an induction motor can be seen in Eq.\ \ref{eq:speed}
#+end_src

Make sure you label your equations.

#+begin_src latex
\begin{equation}  \label{eq:speed}
  n = \frac{120 f}{p},
\end{equation}
#+end_src

A text showing how citations are inserted into the document along how units should be entered
using ~\SI~ command.

#+begin_src latex
In literature, there are several descriptions for the term "high-speed".  As a mechanical
engineer, peripheral speed over \SI{150}{\meter\per\second} is considered to be high speed
\cite{gieras2011performance}. From the motor manufacturer's point of view, a two-pole machine
which is supplied higher than 50 to \SI{60}{\hertz}, can be considered as a high-speed machine.
However, the most important point of view for the high-speed term is explained by development
at power electronics. Nowadays, up to few hundreds hertz frequencies can be produced by
variable frequency drives. However, voltage qualities of these are not satisfactory due to
limited switching frequency of high-power IGBT technology. Thus, high-speed levels might be
calculated for frequencies in the range of 100 to \SI{400}{\hertz} are considered to be
high-frequencies \cite{pyrhonen1991high}.  Owing to brush and commutator structure causing mechanical and
electrical problems, DC drives are not allowed to be used for high-speed applications. In
addition to the aforementioned statement, the structure is not appropriate for large
centrifugal forces.  Nevertheless, as high-speed drive applications, there are different type
of AC motor concepts proposed in literature
\cite{gieras2011performance, pyrhonen1991high, lahteenmaki2002design, saari1998thermal}:
Laminated/solid induction, permanent
magnet synchronous and switched reluctance synchronous motors.
#+end_src

Here is an example of how a table could be written using tabular. But of course there
are many packages which allow typesetting tables such as

- ~tabularray~
- ~tabularx~
- ~nicearray~

#+begin_src latex
\begin{table}
  \begin{tabular}{rll} \toprule
    \parbox[t]{5cm}{\textbf{Admission requirements                            \\ for Mathematics (MSc)}}  & \parbox[t]{5cm}{\textbf{Courses completed \\ before start}} & \parbox[t]{2.5cm}{\textbf{Date of \\ completion}} \\  \midrule
    Mathematical Analysis (30 ECTS)    & Mathematical Analysis 1 & 22.04.2014 \\
    ~                                  & Mathematical Analysis 2 & 15.02.2013 \\
    ~                                  & Complex Analysis        & 01.07.2015 \\ \midrule
    Algebra/Linear algebra (22.5 ECTS) & Advanced Algebra        & 17.02.2013 \\
    ~                                  & Abstract Algebra        & 01.06.2015 \\ \midrule
    Geometry/Topology (15 ECTS)        & Topology                & 01.11.2014 \\
    ~                                  & Vector Analysis         & 15.06.2015 \\
    ~                                  & Differential Geometry   & 15.02.2013 \\ \bottomrule
  \end{tabular}
  \caption{As can be clearly seen, this table has absolutely no reason to be here aside from
    taking space. But it is a nice table to show how it should look and a template to write your
    own tables.}
\end{table}
#+end_src

If you need spacing between two paragraphs use ~\\~ to add a space between the paragraphs

#+begin_src latex
It is due to remarkable improvements of power electronics, frequency inverters and AC
variable-speed drives, which allows a wider use of applications of solid-rotor induction motor
(SRIM). SRIM's are used in drive application ranging from a few kW's to 10 MW's. Fans,
compressors, pumps, gas turbines, sewing machines, space and aeronautics, auxiliary motors for
starting turbo-alternators, eddy current brakes, two-phase servomotors are a few examples of its
areas. \\

Below are the advantages of SRIM compared to CRIM:
#+end_src

Using ~enumitem~ package you can add additional embellishments to the itemize, enumerate, and
description envrionments. Here we use ~itemsep=0pt~ to control the distance between each item
in the list

#+begin_src latex
\begin{itemize}[itemsep=0pt]
\item Structural and Mechanical integrity, Rigiditiy, Reliability and Strength of
  Material
\item High thermal properties
\item High speed in high power applications (high moment density)
\item Low noise and vibrations in high speed applications
\item Simple to protect against aggressive chemicals
\item Ease of Manufacturing
\item Low level of noise and vibrations (If the rotor has no slots)
\item Linearity of torque-speed characteristics throughout the entire speed range
\item The possibility of obtaining steady-state stability.
\end{itemize}

In 1950s, Solid-Rotor topologies for induction machines operating at high speeds
have gained a lot of interest. From its inception to 1970s, various scientists and engineers
have contributed to the development and the theory of solid rotor construction, where significant
interest was seen the 1990s for using solid rotor structure for high speed applications.
#+end_src

One of the great things about latex is that you can draw really good looking images using
TiKZ and ~pgfplots~ which you can see below

#+begin_mcibox
Drawing graphs can take some time to compile so if you are interested in using Overleaf (why?)
perhaps use external software to draw your work.
#+end_mcibox

#+begin_src latex
\begin{figure}[!t]
  \begin{tikzpicture}
    \begin{axis}[width=15cm, height=6cm,
      minor tick num   = 2,
      grid             = both,	% have a grid that is bitchin
      % GRID OPTIONS
      minor grid style = {
        densely dotted,
        line width = 0.1,
        gray!30
      },
      major grid style={
        densely dotted,
        line width = 0.3,
        gray!30
      }]
      \addplot+ [
      const plot mark right,
      ] coordinates {
        (0,0.1)    (0.1,0.15)  (0.2,0.5)   (0.3,0.62)
        (0.4,0.56) (0.5,0.58)  (0.6,0.65)  (0.7,0.6)
        (0.8,0.58) (0.9,0.55)  (1,0.52)
      };
    \end{axis}
  \end{tikzpicture}
  \caption{The authors interest in the topic as years go on.}
\end{figure}
#+end_src

Here is a good example of how to add footnote to your text which, when compiled, will show up
on the bottom of the page it was invoked.

#+begin_src latex
As the rotor does not contain any trace of copper \footnote{the rotor
  consists of a solid body of steel or similar ferromagnetic material}{windings}, the eddy currents
roam in the rotor without any conductive path restriction and cause the motor to
have different characteristics compared to a Cage Rotor Induction motor (CRIM), an industry standard
construction.
While eddy currents are the main principle of its operation, these currents also causes
the motor to have lower efficiency in slow speed aplications and this indirectly
decreases its power factor. But in high speed application where the speed is
around 30000 rpm the losses become far less and SRIM becomes the better choice for high speed
applications.

\subsection{Report Structure} %~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

In this report for Drive Technologies, the high-speed performance of the four
different types of rotors are investigated and compared using finite element analysis:
cage, smooth solid, axially slitted, coated is designed using a finite-element
analysis (FEA). All rotors are designed with similar geometries and construction parameters
to minimise the effect of unwanted effects.
#+end_src

Finally, if you need to show some code in your work, I would suggest useing lstlisting as it
is easier to setup. A default style is given in the class but feel free to adjust depending
on your needs.

#+begin_src latex
\begin{lstlisting}[language=C++]  
  // C++ program to find all string
  // which are greater than given length k 

  #include <bits/stdc++.h> 
  using namespace std;

  // function find string greater than
  // length k 
  void string_k(string s, int k) 
  {
    // create an empty string
    string w = "";
    // iterate the loop till every space
    for (int i = 0; i < s.size(); i++) {
      if (s[i] != ' ')

      // append this sub string in
      // string w
      w = w + s[i];
      else {

        // if length of current sub
        // string w is greater than 
        // k then print
        if (w.size() > k)
        cout << w << " "; 
        w = "";
      }
    }
  }
\end{lstlisting}
#+end_src


#+begin_src latex
The number of turns per stator slot is selected so as to obtain the
same stator current in rated operation. All four motors were analyzed using FEA
tools for 20 different speeds in order to obtain the combined torque-speed
characteristics. To illustrate visually the differences in the distributions of the
magnetic flux and the eddy current the results for 11300 rpm are presented and the
core loss, the total loss and the efficiency for the specific speed are compared for all
the motors. The designed four motors will be also compared for winding currents,
induced voltages, flux linkages, electromagnetic torque, copper losses, iron losses,
solid rotor losses and efficiency.
#+end_src
** Poster Main
The following code represents a template for creating a poster. The text is gibberish as
it is there for showing different aspects of posters.

#+begin_src latex
\documentclass[   
state        = Poster,                       % (Report | Poster    | Thesis)
lang         = EN,                           % (DE     | EN) 
dept         = MECH,                         % (MECH   | SBT)
bib-active   = true,                         % (true   | false)
bib-style    = ieee,                         % (ieee)
]{mcidoc}
#+end_src

Next we have our preamble where it is a good practice to put and connfigurations we
may need to have in our document such as:

- Additional packages,
- Package settings,
- Newcommands or revising old commands,
- Loading libraries,
- Declaring file paths.

Here we have a sample bibliography as well.

And at the lower end we have some variables which need defining for the poster
template.


#+begin_src latex
% CUSTOM COMMANDS -----------------------------------------------------------------------------
%       
% Please enter any custom command/packages you require here for easy tracking 

% For example, bibliography setting are added. Bibtex is the standard but if you prefer
% there are other options on the market such as biber. Style has been chosen as IEEE but if 
% are from another discipline, please feel free to change it.




\bibliography{references.bib}  % Here we add our file where we store our references.
%      
% ---------------------------------------------------------------------------------------------

% DOCUMENT PARAMETERS -------------------------------------------------------------------------

\Title{%
  On the Study of Different Rotor Geometry Configuration for use in High-Speed
  Induction Motors
}% 

\Authors{%
  Alvin McCollough
}%

\Affiliations{%
  MCI, Innsbruck, Austria
}%
#+end_src

We then begin with out document

#+begin_src latex
\begin{document} % ############################################################################

\MakeTitlePage     
#+end_src

For use to make a poster we need to employ columns. As the name suggest column allow us
to put content in an organised manner on the page. The environment defines a section for
us to put out content:

#+begin_src latex
\begin{columns}
    \column{0.39}  
    \block{Defining Speed}{ 
        In recent years, improvements in manufacturing, transportation and process industry
        technologies bring about an increase in optimal operation speed in drive systems. In this
        respect, recently developed high speed gear-less or direct-drive electrical drives have seen an
        increase in interest based on the reduction in the total structural volume of the drive
        system. Due to the significant development of cost-effective, fast switching and compact
        variable frequency drives technology, wide speed range operations of different type AC motors
        has become feasible. The speed definition of an induction motor can be seen in Eq.\ \ref{eq:speed}

        \begin{equation}  \label{eq:speed}
            n = \frac{120 f}{p},
        \end{equation}

        In literature, there are several descriptions for the term "high-speed".  As a mechanical
        engineer, peripheral speed over \SI{150}{\meter\per\second} is considered to be high speed
        \cite{gieras2011performance}. From the motor manufacturer's point of view, a two-pole machine
        which is supplied higher than 50 to \SI{60}{\hertz}, can be considered as a high-speed machine.
        However, the most important point of view for the high-speed term is explained by development
        at power electronics. Nowadays, up to few hundreds hertz frequencies can be produced by
        variable frequency drives. However, voltage qualities of these are not satisfactory due to
        limited switching frequency of high-power IGBT technology. Thus, high-speed levels might be
        calculated for frequencies in the range of 100 to \SI{400}{\hertz} are considered to be
        high-frequencies \cite{pyrhonen1991high}.  Owing to brush and commutator structure causing mechanical and
        electrical problems, DC drives are not allowed to be used for high-speed applications. In
        addition to the aforementioned statement, the structure is not appropriate for large
        centrifugal forces.  Nevertheless, as high-speed drive applications, there are different type
        of AC motor concepts proposed in literature
        \cite{gieras2011performance, pyrhonen1991high, lahteenmaki2002design, saari1998thermal}:
        Laminated/solid induction, permanent
        magnet synchronous and switched reluctance synchronous motors.
    }
    ~
    \column{0.59}
    \block{Comparison}{
        It is due to remarkable improvements of power electronics, frequency inverters and AC
        variable-speed drives, which allows a wider use of applications of solid-rotor induction motor
        (SRIM). SRIM's are used in drive application ranging from a few kW's to 10 MW's. Fans,
        compressors, pumps, gas turbines, sewing machines, space and aeronautics, auxiliary motors for
        starting turbo-alternators, eddy current brakes, two-phase servomotors are a few examples of its
        areas.

        Below are the advantages of SRIM compared to CRIM:

        \begin{itemize}[itemsep=0pt]
            \item Structural and Mechanical integrity, Rigiditiy, Reliability and Strength of
                  Material
            \item High thermal properties
            \item High speed in high power applications (high moment density)
            \item Low noise and vibrations in high speed applications
            \item Simple to protect against aggressive chemicals
            \item Ease of Manufacturing
            \item Low level of noise and vibrations (If the rotor has no slots)
            \item Linearity of torque-speed characteristics throughout the entire speed range
            \item The possibility of obtaining steady-state stability.
        \end{itemize}
    }
    ~
    \block{A Figure}{
        In 1950s, Solid-Rotor topologies for induction machines operating at high speeds
        have gained a lot of interest. From its inception to 1970s, various scientists and engineers
        have contributed to the development and the theory of solid rotor construction, where significant
        interest was seen the 1990s for using solid rotor structure for high speed applications.

        \begin{tikzfigure}
            \begin{tikzpicture}
                \begin{axis}[width=30cm, height=12cm,
                        minor tick num   = 2,
                        grid             = both,	% have a grid that is bitchin
                        % GRID OPTIONS
                        minor grid style = {
                                densely dotted,
                                line width = 0.1,
                                gray!30
                            },
                        major grid style={
                                densely dotted,
                                line width = 0.3,
                                gray!30
                            }]
                    \addplot+ [
                        const plot mark right,
                    ] coordinates {
                            (0,0.1)    (0.1,0.15)  (0.2,0.5)   (0.3,0.62)
                            (0.4,0.56) (0.5,0.58)  (0.6,0.65)  (0.7,0.6)
                            (0.8,0.58) (0.9,0.55)  (1,0.52)
                        };
                \end{axis}
            \end{tikzpicture}
        \end{tikzfigure}
    }
\end{columns}
#+end_src

Let's have a look at how this works:

- We first define the environment ~columns~.
- Inside this columns we write the command ~column{[0-9]}~ where we put a number
  between 0 and 1 (i.e., 0.29 or 0.83). This partitions the content columnswise.
- Within this partition, if you would like to put content you invoke ~\block{TITLE}{CONTENT}~
  where TITLE is the title of the block and CONTENT is whatever you would like to have within
  the block.
- If you want to put content on RIGHT, then you need to write ~column{[0-9]}~. Be aware that all
  column numbers when summed should not add up to 1 and should ideally be around 0.98.
- IF you want to put content below, then just write ~\block{TITLE}{CONTENT}~ directly below.

Here we add bibliography and turn off the heading as the block already has one.

#+begin_src latex
\begin{columns}
    \column{0.98}
    \block{Another Block}{
        In this report for Drive Technologies, the high-speed performance of the four
        different types of rotors are investigated and compared using finite element analysis:
        cage, smooth solid, axially slitted, coated is designed using a finite-element
        analysis (FEA). All rotors are designed with similar geometries and construction parameters
        to minimise the effect of unwanted effects.

        The number of turns per stator slot is selected so as to obtain the
        same stator current in rated operation. All four motors were analyzed using FEA
        tools for 20 different speeds in order to obtain the combined torque-speed
        characteristics. To illustrate visually the differences in the distributions of the
        magnetic flux and the eddy current the results for 11300 rpm are presented and the
        core loss, the total loss and the efficiency for the specific speed are compared for all
        the motors. The designed four motors will be also compared for winding currents,
        induced voltages, flux linkages, electromagnetic torque, copper losses, iron losses,
        solid rotor losses and efficiency.
      }
      \block{References}{
        \printbibliography[heading=none]
        }
\end{columns}
#+end_src

We then conclude our document.

#+begin_src latex
\end{document} % \(^.^)/
#+end_src
* Bibliography Template
Here we have a sample bib file as a template:

#+begin_src bibtex
@article{gieras2011performance,
  title =        {Performance calculation for a high-speed solid-rotor induction motor},
  author =       {Gieras, Jacek F and Saari, Juha},
  journal =      {IEEE transactions on industrial electronics},
  volume =       59,
  number =       6,
  pages =        {2689--2700},
  year =         2011,
  publisher =    {IEEE}
}

@article{pyrhonen1991high,
  title =        {The high-speed induction motor: Calculating the effects of solid-rotor
                  material on machine characteristics},
  author =       {Pyrh{\"o}nen, Juha},
  journal =      {Acta Polytechnica Scandinavica, Electrical Engineering Series;(Finland)},
  volume =       68,
  year =         1991
}

@book{lahteenmaki2002design,
  title =        {Design and voltage supply of high-speed induction machines},
  author =       {L{\"a}hteenm{\"a}ki, Jussi and others},
  year =         2002,
  publisher =    {Helsinki University of Technology}
}

@book{saari1998thermal,
  title =        {Thermal analysis of high-speed induction machines},
  author =       {Saari, Juha and others},
  year =         1998,
  publisher =    {Helsinki University of Technology}
}
#+end_src
